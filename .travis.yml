language: bash
dist: bionic
env:
  global:
    - BUILD_TOOLS=29.0.3
    - COMPILE_SDK_VERSION=29
    - API=29
    - ABI=x86_64
    - ADB_INSTALL_TIMEOUT=8
    - ANDROID_HOME=${HOME}/android-sdk
    - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
    - EMU_FLAVOR=default
    - JDK="1.8"
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
before_install:
  # Instalar JDK
  - curl "https://raw.githubusercontent.com/DanySK/Gravis-CI/master/.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - source ~/.install-jdk-travis.sh
  # Instalar Android SDK
  - wget -q "${ANDROID_TOOLS_URL}" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - mkdir ~/.android # eliminar warning
  - echo 'count=0' > ~/.android/repositories.cfg # eliminar warning
  - yes | sdkmanager --licenses >/dev/null # eliminar warning
  - echo y | sdkmanager --no_https "platform-tools" >/dev/null
  - echo y | sdkmanager --no_https "tools" >/dev/null
  - echo y | sdkmanager --no_https "build-tools;$BUILD_TOOLS" >/dev/null
  - echo y | sdkmanager --no_https "platforms;android-$COMPILE_SDK_VERSION" >/dev/null
  - echo y | sdkmanager --no_https "emulator" >/dev/null
  - echo y | sdkmanager --no_https "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null
  # Activar KVM
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm
  # Instalar calabash
  - rvm install 2.7.1
  - bundle install --jobs=3 --retry=3
before-script:
  # Dar permisos a gradle
  - chmod +x ./gradlew
  # Obtener rama actual en variable de entorno BRANCH
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
  # Encendemos el emulador de android para los tests que lo necesiten
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3
  - echo no | avdmanager create avd --force --name test -k "system-images;android-29;default;x86_64" -c 10M
  - |
    EMU_PARAMS="-verbose -selinux permissive -qemu -m 2048"
    EMU_COMMAND="emulator"
    sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} -avd test ${AUDIO} ${EMU_PARAMS} &"
  - |
    set +e
    bootanim=""
    failcounter=0
    timeout_in_sec=600
    until [[ "$bootanim" =~ "stopped" ]]; do
      bootanim=`adb -e shell getprop init.svc.bootanim 2>&1 &`
      if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline"
        || "$bootanim" =~ "running" || "$bootanim" =~  "error: no emulators found" ]]; then
        let "failcounter += 1"
        echo "Waiting for emulator to start"
        if [[ $failcounter -gt timeout_in_sec ]]; then
          echo "Timeout ($timeout_in_sec seconds) reached; failed to start emulator"
          exit 1
        fi
      fi
      sleep 1
    done

    echo "Emulator is ready"
  - ./gradlew clean assembleRelease -PdisablePreDex --continue --stacktrace
  # Crear keystore
  - keytool -genkey -alias androiddebugkey -keystore ~/.android/debug.keystore -storetype PKCS12 -keyalg RSA -storepass android -keysize 2048 -dname "CN=Android Debug,O=Android,C=US"

script:
  # Ejecutar tests siempre
  # Unitarios
  - "./gradlew test"
  # Calabash
  - adb start-server
  - adb devices
  - bundle exec calabash-android resign ./app/build/outputs/apk/release/app-release-unsigned.apk
  - cd app/src/test/java/com/example/tetrisg8/calabash
  - bundle exec calabash-android run ../../../../../../../build/outputs/apk/release/app-release-unsigned.apk
  - cd $HOME
  # Si estamos en develop ejecutar sonar
  - if [ "$BRANCH" = "develop" ]; then ./gradlew sonarqube; fi
  # Si estamos en master desplegamos a GitHub Releases (hacemos un tag y deploy se encarga de desplegar)
  - if [ "$BRANCH" = "master" ]; then ./gradlew sonarqube; git config --global
    user.email "deploy@travis-ci.com"; git config --global user.name "Travis CI Deploy";
    export GIT_TAG=1.0.$TRAVIS_BUILD_NUMBER; git tag "$GIT_TAG" -a -m "Despliegue desde Travis con build numero $TRAVIS_BUILD_NUMBER";
    fi
deploy:
  provider: releases
  api_key:
    secure: K5qbU1o0uP0/toSDN1vQrMjNV2PTsIiqv/Jl5AXqRQq0MKKaeys5lzh3fqxti4ynFqyexWuwIsFvRg6fn7c92PVRAKieqVNFwgBcYqPtkerHf8vF63IpukNwdxhhAJ8WAQRbBUnmYPbhGJ314hQdQ6Hoc85hP/QQ0KIL4Q46aeCBU1qvpTpXWk0dQllSBm/mD2JNZBjp5izPUQVXBAVrtpBaoPb4hWkwSz8+oxCHmRDW4LGRZM25TkasW1aJuSpSSXQ5HkNAny8PlM22PT6Xs3yQyDrqPXzLYNOuYpNaGsyN5jUy6Jz2MSNk8x5V3K5r2Y/17V/72+mm3pA1DIYWf0dL7Xe+mtB6zUMumCLZUoWrfCWWFv88LwWY/nsUsKQrGnEwjCaVS4U+n8rSuSqluiPnjSlrWM0KmRuKBoI1VPRjYXLr76JVLwljiKPgVnjjSkvjpIM/7N8IpUaU+amNng7sz4GKULxfzcKOd2LiNUKc2kEDFYdNqGHGYbxGtujl9lPI1pGi9zYB2mRE8juTSmJhBRmgicyGTXbke8OX+3D2aOyYDX0TxfeeBClfD7wUlPuT3NGGkjPPtWGxMF/mg/b/E5WHj89uEEzHoyXk7TqEwZ7zUcD1Lw9JhXn4R+XzPewxZUuOR6Ug0rg49cGuUTYTsk/wywZBw9Y+rB3/Bsg=
  file: ./app/build/outputs/apk/release/app-release-unsigned.apk
  skip_cleanup: true
  on:
    branch: master
